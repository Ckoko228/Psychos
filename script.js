const car = {
  id: 1,
  name: "BMW M5 F90",
  img: "https://s3.iimg.su/s/03/nm87ykpGaRDnww9aBVJpUQd6oq4NBo3oDFOpwfcX.png" 
};

const COOLDOWN_MS = 90 * 60 * 1000; // 1.5 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
function saveClaim(data) {
  localStorage.setItem("claim", JSON.stringify(data));
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
function loadClaim() {
  return JSON.parse(localStorage.getItem("claim"));
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å—Ç–µ–∫ –ª–∏ —Ç–∞–π–º–µ—Ä
function isCooldownExpired(timestamp) {
  if (!timestamp) return true;
  return (Date.now() - timestamp) > COOLDOWN_MS;
}

function renderCar() {
  const container = document.getElementById("car-list");
  const nickname = document.getElementById("nickname").value.trim();
  let claim = loadClaim();

  // –ï—Å–ª–∏ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã –∏—Å—Ç–µ–∫–ª–æ ‚Äî –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –º–∞—à–∏–Ω—É
  if (claim && isCooldownExpired(claim.timestamp)) {
    claim = null;
    localStorage.removeItem("claim");
  }

  container.innerHTML = "";

  const carDiv = document.createElement("div");
  carDiv.className = "car";

  let innerHTML = `
    <img src="${car.img}" alt="${car.name}" />
    <h3>${car.name}</h3>
  `;

  if (claim) {
    innerHTML += `<p class="taken-by">üö´ –ó–∞–Ω—è—Ç–æ: <b>${claim.user}</b></p>`;

    if (nickname && nickname === claim.user) {
      innerHTML += `<button id="release-btn">–û—Ç–∫–∞–∑–∞—Ç—å—Å—è</button>`;
    }
  } else {
    innerHTML += `<button id="take-btn">–í–∑—è—Ç—å</button>`;
  }

  carDiv.innerHTML = innerHTML;
  container.appendChild(carDiv);

  if (!claim) {
    document.getElementById("take-btn").addEventListener("click", () => {
      const nicknameNow = document.getElementById("nickname").value.trim();
      if (!nicknameNow) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫!");
        return;
      }
      saveClaim({ user: nicknameNow, timestamp: Date.now() });
      renderCar();
    });
  } else if (nickname && nickname === claim.user) {
    document.getElementById("release-btn").addEventListener("click", () => {
      localStorage.removeItem("claim");
      renderCar();
    });
  }
}

document.getElementById("nickname").addEventListener("input", renderCar);
document.addEventListener("DOMContentLoaded", renderCar);
const usernameInput = document.getElementById("username");
const claimBtn = document.getElementById("claimBtn");
const releaseBtn = document.getElementById("releaseBtn");
const status = document.getElementById("status");

async function checkStatus() {
  const res = await fetch("/api/claim");
  const data = await res.json();

  if (data.taken) {
    status.textContent = `–ú–∞—à–∏–Ω–∞ –∑–∞–Ω—è—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${data.user}`;
  } else {
    status.textContent = "–ú–∞—à–∏–Ω–∞ —Å–≤–æ–±–æ–¥–Ω–∞";
  }
}

claimBtn.addEventListener("click", async () => {
  const user = usernameInput.value.trim();
  if (!user) return alert("–£–∫–∞–∂–∏ –Ω–∏–∫!");

  const res = await fetch("/api/claim", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ user }),
  });

  const data = await res.json();
  if (data.success) {
    status.textContent = "–¢—ã –≤–∑—è–ª –º–∞—à–∏–Ω—É!";
  } else {
    alert(data.error);
  }

  checkStatus();
});

releaseBtn.addEventListener("click", async () => {
  const user = usernameInput.value.trim();
  if (!user) return alert("–£–∫–∞–∂–∏ –Ω–∏–∫!");

  const res = await fetch("/api/release", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ user }),
  });

  const data = await res.json();
  if (data.success) {
    status.textContent = "–¢—ã –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –º–∞—à–∏–Ω—ã.";
  } else {
    alert(data.error);
  }

  checkStatus();
});

setInterval(checkStatus, 3000);
checkStatus();
function updateStatus() {
  fetch("/api/claim")
    .then(res => res.json())
    .then(data => {
      document.getElementById("status").textContent = data.taken 
        ? `–ú–∞—à–∏–Ω–∞ –∑–∞–Ω—è—Ç–∞: ${data.user}` 
        : "–ú–∞—à–∏–Ω–∞ —Å–≤–æ–±–æ–¥–Ω–∞";
    })
    .catch(() => {
      document.getElementById("status").textContent = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è";
    });
}

// –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É –∏ –ø–æ—Ç–æ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
updateStatus();
setInterval(updateStatus, 1000);
